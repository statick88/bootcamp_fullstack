# Urls en Django

la secuencia que debe tener el desarrollo en django es:

Modelo -> Vista -> Urls -> Template

Para que las urls funcionen se debe tener en cuenta que se debe crear un archivo urls.py en la app que se esta trabajando, y se debe importar la vista que se va a utilizar.

:::{.callout-info}
El archivo urls.py en la app no se crea por defecto, se debe crear manualmente.
:::

```python
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='index'),
]
```

En el archivo urls.py del proyecto se debe importar la funci√≥n include y se debe agregar la url de la app.

:::{.callout-info}
Recordemos los modelos, vistas y templates creados en los capitulos anteriores.

```python
from django.db import models

class Medicamento(models.Model):
    nombre = models.CharField(max_length=100)
    precio = models.DecimalField(max_digits=10, decimal_places=2)
    existencias = models.IntegerField()

    def __str__(self):
        return self.nombre

class Venta(models.Model):
    medicamento = models.ForeignKey(Medicamento, on_delete=models.CASCADE)
    cantidad = models.IntegerField()
    fecha = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f'{self.medicamento} - {self.cantidad}'
```

```python
from django.shortcuts import render
from .models import Medicamento

def index(request):
    medicamentos = Medicamento.objects.all()
    return render(request, 'index.html', {'medicamentos': medicamentos})
```

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Medicamentos</title>
</head>
<body>
    <h1>Medicamentos</h1>
    <ul>
        {% for medicamento in medicamentos %}
            <li>{{ medicamento.nombre }} - {{ medicamento.precio }}</li>
        {% endfor %}
    </ul>
</body>
</html>
```
:::

Ahora vamos a crear una url para la vista de detalle de un medicamento.

```python
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='index'),
    path('medicamento/<int:id>/', views.detalle, name='detalle'),
]
```

```python
from django.shortcuts import render
from .models import Medicamento

def index(request):
    medicamentos = Medicamento.objects.all()
    return render(request, 'index.html', {'medicamentos': medicamentos})

def detalle(request, id):
    medicamento = Medicamento.objects.get(id=id)
    return render(request, 'detalle.html', {'medicamento': medicamento})
```

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalle de Medicamento</title>
</head>
<body>
    <h1>{{ medicamento.nombre }}</h1>
    <p>Precio: {{ medicamento.precio }}</p>
    <p>Existencias: {{ medicamento.existencias }}</p>
</body>
</html>
```

:::{.callout-info}
En la url de detalle se esta pasando un parametro llamado id, este parametro se recibe en la vista y se utiliza para buscar el medicamento en la base de datos.
:::

Ahora vamos a crear una url para la vista de ventas.

```python
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='index'),
    path('medicamento/<int:id>/', views.detalle, name='detalle'),
    path('ventas/', views.ventas, name='ventas'),
]
```

```python
from django.shortcuts import render
from .models import Medicamento, Venta

def index(request):
    medicamentos = Medicamento.objects.all()
    return render(request, 'index.html', {'medicamentos': medicamentos})

def detalle(request, id):
    medicamento = Medicamento.objects.get(id=id)
    return render(request, 'detalle.html', {'medicamento': medicamento})

def ventas(request):
    ventas = Venta.objects.all()
    return render(request, 'ventas.html', {'ventas': ventas})
```

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ventas</title>
</head>
<body>
    <h1>Ventas</h1>
    <ul>
        {% for venta in ventas %}
            <li>{{ venta.medicamento }} - {{ venta.cantidad }} - {{ venta.fecha }}</li>
        {% endfor %}
    </ul>
</body>
</html>
```

:::{.callout-info}
En la url de ventas se esta consultando todas las ventas que se han realizado, y se esta pasando a la plantilla ventas.html.
:::

Ahora vamos a crear una url para la vista de agregar venta.

```python
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='index'),
    path('medicamento/<int:id>/', views.detalle, name='detalle'),
    path('ventas/', views.ventas, name='ventas'),
    path('ventas/agregar/', views.agregar_venta, name='agregar_venta'),
]
```

```python
from django.shortcuts import render, redirect
from .models import Medicamento, Venta
from .forms import VentaForm

def index(request):
    medicamentos = Medicamento.objects.all()
    return render(request, 'index.html', {'medicamentos': medicamentos})

def detalle(request, id):
    medicamento = Medicamento.objects.get(id=id)
    return render(request, 'detalle.html', {'medicamento': medicamento})

def ventas(request):
    ventas = Venta.objects.all()
    return render(request, 'ventas.html', {'ventas': ventas})

def agregar_venta(request):
    if request.method == 'POST':
        form = VentaForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('ventas')
    else:
        form = VentaForm()
    return render(request, 'agregar_venta.html', {'form': form})
```

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Agregar Venta</title>
</head>
<body>
    <h1>Agregar Venta</h1>
    <form method="POST">
        {% csrf_token %}
        {{ form.as_p }}
        <button type="submit">Agregar</button>
    </form>
</body>
</html>
```

:::{.callout-info}
En la url de agregar venta se esta utilizando un formulario, este formulario se crea en un archivo forms.py en la app.

```python
from django import forms
from .models import Venta

class VentaForm(forms.ModelForm):
    class Meta:
        model = Venta
        fields = '__all__'
```
:::

Ahora vamos a crear una url para la vista de editar venta.

```python
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='index'),
    path('medicamento/<int:id>/', views.detalle, name='detalle'),
    path('ventas/', views.ventas, name='ventas'),
    path('ventas/agregar/', views.agregar_venta, name='agregar_venta'),
    path('ventas/editar/<int:id>/', views.editar_venta, name='editar_venta'),
]
```

```python
from django.shortcuts import render, redirect
from .models import Medicamento, Venta
from .forms import VentaForm

def index(request):
    medicamentos = Medicamento.objects.all()
    return render(request, 'index.html', {'medicamentos': medicamentos})

def detalle(request, id):
    medicamento = Medicamento.objects.get(id=id)
    return render(request, 'detalle.html', {'medicamento': medicamento})

def ventas(request):
    ventas = Venta.objects.all()
    return render(request, 'ventas.html', {'ventas': ventas})

def agregar_venta(request):
    if request.method == 'POST':
        form = VentaForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('ventas')
    else:
        form = VentaForm()
    return render(request, 'agregar_venta.html', {'form': form})

def editar_venta(request, id):
    venta = Venta.objects.get(id=id)
    if request.method == 'POST':
        form = VentaForm(request.POST, instance=venta)
        if form.is_valid():
            form.save()
            return redirect('ventas')
    else:
        form = VentaForm(instance=venta)
    return render(request, 'editar_venta.html', {'form': form})
```

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editar Venta</title>
</head>
<body>
    <h1>Editar Venta</h1>
    <form method="POST">
        {% csrf_token %}
        {{ form.as_p }}
        <button type="submit">Editar</button>
    </form>
</body>
</html>
```

:::{.callout-info}
En la url de editar venta se esta pasando un parametro llamado id, este parametro se recibe en la vista y se utiliza para buscar la venta en la base de datos.
:::

Ahora vamos a crear una url para la vista de eliminar venta.

```python
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='index'),
    path('medicamento/<int:id>/', views.detalle, name='detalle'),
    path('ventas/', views.ventas, name='ventas'),
    path('ventas/agregar/', views.agregar_venta, name='agregar_venta'),
    path('ventas/editar/<int:id>/', views.editar_venta, name='editar_venta'),
    path('ventas/eliminar/<int:id>/', views.eliminar_venta, name='eliminar_venta'),
]
```

```python
from django.shortcuts import render, redirect
from .models import Medicamento, Venta
from .forms import VentaForm

def index(request):
    medicamentos = Medicamento.objects.all()
    return render(request, 'index.html', {'medicamentos': medicamentos})

def detalle(request, id):
    medicamento = Medicamento.objects.get(id=id)
    return render(request, 'detalle.html', {'medicamento': medicamento})

def ventas(request):
    ventas = Venta.objects.all()
    return render(request, 'ventas.html', {'ventas': ventas})

def agregar_venta(request):
    if request.method == 'POST':
        form = VentaForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('ventas')
    else:
        form = VentaForm()
    return render(request, 'agregar_venta.html', {'form': form})

def editar_venta(request, id):
    venta = Venta.objects.get(id=id)
    if request.method == 'POST':
        form = VentaForm(request.POST, instance=venta)
        if form.is_valid():
            form.save()
            return redirect('ventas')
    else:
        form = VentaForm(instance=venta)
    return render(request, 'editar_venta.html', {'form': form})

def eliminar_venta(request, id):
    venta = Venta.objects.get(id=id)
    venta.delete()
    return redirect('ventas')
```

:::{.callout-info}
En la url de eliminar venta se esta pasando un parametro llamado id, este parametro se recibe en la vista y se utiliza para buscar la venta en la base de datos y eliminarla.
:::

# Actividades

1. Crear una url para la vista de detalle de un medicamento.
2. Crear una url para la vista de ventas.
3. Crear una url para la vista de agregar venta.
4. Crear una url para la vista de editar venta.
5. Crear una url para la vista de eliminar venta.
6. Crear un formulario para agregar una venta.
7. Crear un formulario para editar una venta.
8. Crear un boton para eliminar una venta.
9. Crear un boton para editar una venta.
10. Crear un boton para agregar una venta.
11. Crear un boton para ver el detalle de un medicamento.
12. Crear un boton para ver las ventas.
13. Crear un boton para volver a la lista de ventas.
14. Crear un boton para volver a la lista de medicamentos.

<details>
    <summary>Ver respuesta</summary>

1. Crear una url para la vista de detalle de un medicamento.

```python
from django.urls import path
from . import views

# Urls de la app
urlpatterns = [
    path('', views.index, name='index'),
    path('medicamento/<int:id>/', views.detalle, name='detalle'),
]
```

2. Crear una url para la vista de ventas.

```python
from django.urls import path
from . import views

# Urls de la app
urlpatterns = [
    path('', views.index, name='index'),
    path('medicamento/<int:id>/', views.detalle, name='detalle'),
    path('ventas/', views.ventas, name='ventas'),
]
```

3. Crear una url para la vista de agregar venta.

```python
from django.urls import path
from . import views

# Urls de la app
urlpatterns = [
    path('', views.index, name='index'),
    path('medicamento/<int:id>/', views.detalle, name='detalle'),
    path('ventas/', views.ventas, name='ventas'),
    path('ventas/agregar/', views.agregar_venta, name='agregar_venta'),
]
```

4. Crear una url para la vista de editar venta.

```python
from django.urls import path
from . import views

# Urls de la app
urlpatterns = [
    path('', views.index, name='index'),
    path('medicamento/<int:id>/', views.detalle, name='detalle'),
    path('ventas/', views.ventas, name='ventas'),
    path('ventas/agregar/', views.agregar_venta, name='agregar_venta'),
    path('ventas/editar/<int:id>/', views.editar_venta, name='editar_venta'),
]
```

5. Crear una url para la vista de eliminar venta.

```python
from django.urls import path
from . import views

# Urls de la app
urlpatterns = [
    path('', views.index, name='index'),
    path('medicamento/<int:id>/', views.detalle, name='detalle'),
    path('ventas/', views.ventas, name='ventas'),
    path('ventas/agregar/', views.agregar_venta, name='agregar_venta'),
    path('ventas/editar/<int:id>/', views.editar_venta, name='editar_venta'),
    path('ventas/eliminar/<int:id>/', views.eliminar_venta, name='eliminar_venta'),
]
```

6. Crear un formulario para agregar una venta.

```python
from django import forms
from .models import Venta

class VentaForm(forms.ModelForm):
    class Meta:
        model = Venta
        fields = '__all__'
```

7. Crear un formulario para editar una venta.

```python
from django import forms
from .models import Venta

class VentaForm(forms.ModelForm):
    class Meta:
        model = Venta
        fields = '__all__'
```

8. Crear un boton para eliminar una venta.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Eliminar Venta</title>
</head>
<body>
    <h1>Eliminar Venta</h1>
    <form method="POST">
        {% csrf_token %}
        <button type="submit">Eliminar</button>
    </form>
</body>
</html>
```

9. Crear un boton para editar una venta.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editar Venta</title>
</head>
<body>
    <h1>Editar Venta</h1>
    <form method="POST">
        {% csrf_token %}
        {{ form.as_p }}
        <button type="submit">Editar</button>
    </form>
</body>
</html>
```

10. Crear un boton para agregar una venta.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Agregar Venta</title>
</head>
<body>
    <h1>Agregar Venta</h1>
    <form method="POST">
        {% csrf_token %}
        {{ form.as_p }}
        <button type="submit">Agregar</button>
    </form>
</body>
</html>
```

11. Crear un boton para ver el detalle de un medicamento.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalle de Medicamento</title>
</head>
<body>
    <h1>{{ medicamento.nombre }}</h1>
    <p>Precio: {{ medicamento.precio }}</p>
    <p>Existencias: {{ medicamento.existencias }}</p>
</body>
</html>
```

12. Crear un boton para ver las ventas.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ventas</title>
</head>
<body>
    <h1>Ventas</h1>
    <ul>
        {% for venta in ventas %}
            <li>{{ venta.medicamento }} - {{ venta.cantidad }} - {{ venta.fecha }}</li>
        {% endfor %}
    </ul>
</body>
</html>
```

13. Crear un boton para volver a la lista de ventas.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ventas</title>
</head>
<body>
    <h1>Ventas</h1>
    <ul>
        {% for venta in ventas %}
            <li>{{ venta.medicamento }} - {{ venta.cantidad }} - {{ venta.fecha }}</li>
        {% endfor %}
    </ul>
    <a href="{% url 'ventas' %}">Volver</a>
</body>
</html>
```

14. Crear un boton para volver a la lista de medicamentos.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Medicamentos</title>
</head>
<body>
    <h1>Medicamentos</h1>
    <ul>
        {% for medicamento in medicamentos %}
            <li>{{ medicamento.nombre }} - {{ medicamento.precio }}</li>
        {% endfor %}
    </ul>
    <a href="{% url 'index' %}">Volver</a>
</body>
</html>
```
</details>

# Conclusiones

Las urls en Django son muy importantes para poder acceder a las vistas de la aplicaci√≥n, se deben tener en cuenta las rutas que se van a utilizar y se deben crear las urls en el archivo urls.py de la app y del proyecto.

